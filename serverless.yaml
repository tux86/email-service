service: email-service
frameworkVersion: '3'
useDotenv: true

package:
  patterns:
    - '!*/**'
    - dist/**
    - node_modules/**

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  architecture: arm64
  region: eu-west-1
  lambdaHashingVersion: '20201221'
  profile: ${env:AWS_PROFILE}
  memorySize: 1024
  timeout: 20
  versionFunctions: false
  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP_ID}
    subnetIds:
      - ${env:SUBNET_PRIVATE_A_ID}
      - ${env:SUBNET_PRIVATE_B_ID}
      - ${env:SUBNET_DATABASE_A_ID}
      - ${env:SUBNET_DATABASE_B_ID}
  environment:
      STAGE: ${sls:stage}
      NODE_ENV: ${env:NODE_ENV}
      DEFAULT_FROM_MAIL: ${env:DEFAULT_FROM_MAIL}
      DESTINATION_EMAIL_TEST: ${env:DESTINATION_EMAIL_TEST}
      POSTGRES_HOST: ${env:POSTGRES_HOST}
      POSTGRES_PORT: ${env:POSTGRES_PORT}
      POSTGRES_DATABASE: ${env:POSTGRES_DATABASE}
      POSTGRES_USER: ${env:POSTGRES_USER}
      POSTGRES_PASSWORD: ${env:POSTGRES_PASSWORD}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "*"
          Resource: "*"

custom:
  serverless-offline:
    noPrependStageInUrl: true


functions:
  main:
    handler: dist/src/serverless.handler
    events:
      - httpApi:
          method: '*'
          path: /
      - httpApi:
          method: '*'
          path: /{proxy+}


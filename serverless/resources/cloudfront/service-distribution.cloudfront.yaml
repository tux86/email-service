Resources:
  ServiceCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DeletionPolicy: Delete
    DependsOn:
      - OrgPublicSvcLambdaFunctionUrl
      - OrgManagementSvcLambdaFunctionUrl
    Properties:
      DistributionConfig:
        Enabled: true
        PriceClass: PriceClass_100
        HttpVersion: http2
        Comment: ${self:service}-${sls:stage} Service distribution
        Origins:
          # Org Public Service Lambda Function Origin
          - Id: OrgPublicSvcLambdaFunction
            DomainName:
              !Select [
                2,
                !Split ['/', !GetAtt OrgPublicSvcLambdaFunctionUrl.FunctionUrl],
              ]
            OriginPath: ''
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols: [TLSv1, TLSv1.1, TLSv1.2]
          # Org Management Service Lambda Function Origin
          - Id: OrgManagementSvcLambdaFunction
            DomainName:
              !Select [
                2,
                !Split [
                  '/',
                  !GetAtt OrgManagementSvcLambdaFunctionUrl.FunctionUrl,
                ],
              ]
            OriginPath: ''
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols: [TLSv1, TLSv1.1, TLSv1.2]
        DefaultCacheBehavior:
          # ======================== Default CacheBehavior  ========================
          TargetOriginId: OrgPublicSvcLambdaFunction
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          MinTTL: 0
          DefaultTTL: 0
          AllowedMethods:
            - HEAD
            - DELETE
            - POST
            - GET
            - OPTIONS
            - PUT
            - PATCH
          CachedMethods:
            - HEAD
            - OPTIONS
            - GET
          ForwardedValues:
            QueryString: false
            Headers:
              - Accept
              - x-api-key
              - Authorization
            Cookies:
              Forward: none
        CacheBehaviors:
          # ======================== Org Public Service CacheBehavior  ========================
          - PathPattern: /org-public/*
            TargetOriginId: OrgPublicSvcLambdaFunction
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            MinTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - HEAD
              - DELETE
              - POST
              - GET
              - OPTIONS
              - PUT
              - PATCH
            CachedMethods:
              - HEAD
              - OPTIONS
              - GET
            ForwardedValues:
              QueryString: false
              Headers:
                - Accept
                - x-api-key
                - Authorization
              Cookies:
                Forward: none
          # ======================== Org Management Service CacheBehavior  ========================
          - PathPattern: /org-management/*
            TargetOriginId: OrgManagementSvcLambdaFunction
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            MinTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - HEAD
              - DELETE
              - POST
              - GET
              - OPTIONS
              - PUT
              - PATCH
            CachedMethods:
              - HEAD
              - OPTIONS
              - GET
            ForwardedValues:
              QueryString: false
              Headers:
                - Accept
                - x-api-key
                - Authorization
              Cookies:
                Forward: none

        Aliases:
          - ${self:custom.apiDomainName}
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
          AcmCertificateArn: ${self:custom.certificateNVirginaArn}
